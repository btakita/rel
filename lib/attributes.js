// Generated by CoffeeScript 1.4.0
(function() {
  var AttrBoolean, AttrDecimal, AttrFloat, AttrInteger, AttrString, AttrTime, AttrUndefined, Attribute, Attributes, exports, u,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  u = require('underscore');

  Attribute = require('./attribute');

  Attributes = {
    Attribute: Attribute,
    AttrString: AttrString = (function(_super) {

      __extends(AttrString, _super);

      function AttrString() {
        return AttrString.__super__.constructor.apply(this, arguments);
      }

      return AttrString;

    })(Attribute),
    AttrTime: AttrTime = (function(_super) {

      __extends(AttrTime, _super);

      function AttrTime() {
        return AttrTime.__super__.constructor.apply(this, arguments);
      }

      return AttrTime;

    })(Attribute),
    AttrBoolean: AttrBoolean = (function(_super) {

      __extends(AttrBoolean, _super);

      function AttrBoolean() {
        return AttrBoolean.__super__.constructor.apply(this, arguments);
      }

      return AttrBoolean;

    })(Attribute),
    AttrDecimal: AttrDecimal = (function(_super) {

      __extends(AttrDecimal, _super);

      function AttrDecimal() {
        return AttrDecimal.__super__.constructor.apply(this, arguments);
      }

      return AttrDecimal;

    })(Attribute),
    AttrFloat: AttrFloat = (function(_super) {

      __extends(AttrFloat, _super);

      function AttrFloat() {
        return AttrFloat.__super__.constructor.apply(this, arguments);
      }

      return AttrFloat;

    })(Attribute),
    AttrInteger: AttrInteger = (function(_super) {

      __extends(AttrInteger, _super);

      function AttrInteger() {
        return AttrInteger.__super__.constructor.apply(this, arguments);
      }

      return AttrInteger;

    })(Attribute),
    AttrUndefined: AttrUndefined = (function(_super) {

      __extends(AttrUndefined, _super);

      function AttrUndefined() {
        return AttrUndefined.__super__.constructor.apply(this, arguments);
      }

      return AttrUndefined;

    })(Attribute)
  };

  exports = module.exports = Attributes;

}).call(this);
