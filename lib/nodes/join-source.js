// Generated by CoffeeScript 1.4.0
(function() {
  var Binary, JoinSource, exports,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Binary = require('./binary');

  JoinSource = (function(_super) {

    __extends(JoinSource, _super);

    function JoinSource(singleSource, joinop) {
      if (joinop == null) {
        joinop = [];
      }
      JoinSource.__super__.constructor.call(this);
      this.right = [];
    }

    return JoinSource;

  })(Binary);

  exports = module.exports = JoinSource;

}).call(this);
